Seeing if I get the same output if I change the initial Lagrange multipliers for the case where P=I

Asym and sym code:
l=[0.75, 0.5]
at iteration # 7 the dual, objective, eqconstraint value is 0.013571897027108627  0.013571396803492994  1.9788328881968635e-6
normgrad is 2.5918409966835505e-6
dof [-0.9435406188018274; 0.3308973722912372;;]
grad [-1.3136988776269592e-6; -2.234241484488919e-6;;]
dualval 0.013571897027108627
objval 0.013571396803492994


l=[0.25,0.75]
at iteration # 7 the dual, objective, eqconstraint value is 0.013571897003241353  0.013570073657769412  1.8233454719414838e-6
normgrad is 3.907688638909753e-6
dof [-0.943537950577453; 0.33092158333591887;;]
grad [-5.76955546885069e-7; 3.864861290600596e-6;;]
dualval 0.013571897003241353
objval 0.013570073657769412


Any number of constraints code:
l=[0.75]
l1=[0.5]
at iteration # 7 the dual, objective, eqconstraint value is 0.013571897048131474  0.013534453803397028  5.0155990740083394e-5
normgrad is 5.0231124999765266e-5
dof [-0.9437256911389067; 0.3308327164161388;;]
grad [-4.6411386432011065e-5; -1.921325397220841e-5;;]
dualval 0.013571897048131474
objval 0.013534453803397028

l=[0.25]
l1=[0.75]
at iteration # 7 the dual, objective, eqconstraint value is 0.013571901359260653  0.013489991545749477  8.190981351117692e-5
normgrad is 8.216373517390325e-5
dof [-0.943847501364353; 0.33104390328465444;;]
grad [-7.50661702932278e-5; 3.340582965943861e-5;;]
dualval 0.013571901359260653
objval 0.013489991545749477
